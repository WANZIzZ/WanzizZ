package com.wanzi.wanzizz.state

/**
 * 这段代码使用了 Kotlin 中的 typealias 关键字，用于创建一个类型别名。具体地说，这个类型别名名为 Reducer<S, A>，表示一个函数类型，该函数接受两个参数，一个类型为 S 的状态（State）和一个类型为 A 的动作（Action），然后返回一个类型也为 S 的新状态。
 *
 * 在这里，S 代表状态的类型，A 代表动作的类型。通常在应用程序的状态管理中，这种模式被用于定义状态的更新逻辑。通过传入当前状态和一个动作，Reducer 函数可以计算出新的状态，从而实现状态的变化和管理。这对于实现类似于 Redux 架构中的状态管理非常有用。
 *
 * 例如，假设你正在开发一个购物车应用，S 可能是代表购物车的状态（如购物车中的商品列表和总价），A 则可能是用户执行的动作（如添加商品到购物车、从购物车中移除商品等）。Reducer 函数则可以根据不同的动作类型来更新购物车的状态。
 */
typealias Reducer<S, A> = (S, A) -> S